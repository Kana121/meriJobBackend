package com.job_finder.repository;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.job_finder.UserDtls;

@Service
public class UserService {
	private final UserRepository userRepository;

    @Autowired
    public UserService(UserRepository userRepository) {
        this.userRepository = userRepository;
    }

    public List<UserDtls> getAllUsers() {
        return userRepository.findAll();
    }

    public Optional<UserDtls> getUserById(Long userId) {
        return userRepository.findById(userId);
    }

    public UserDtls createUser(UserDtls user) {
        return userRepository.save(user);
    }

    public UserDtls updateUser(Long userId, UserDtls updatedUser) {
        Optional<UserDtls> optionalUser = userRepository.findById(userId);
        if (optionalUser.isPresent()) {
            UserDtls existingUser = optionalUser.get();
            existingUser.setFullName(updatedUser.getFullName());
            existingUser.setEmailId(updatedUser.getEmailId());
            existingUser.setMobileNumber(updatedUser.getMobileNumber());
            existingUser.setUsername(updatedUser.getUsername());
            existingUser.setPassword(updatedUser.getPassword());
            existingUser.setDescription(updatedUser.getDescription());
            existingUser.setWorkStatus(updatedUser.getWorkStatus());
            existingUser.setResume(updatedUser.getResume());

            return userRepository.save(existingUser);
        } else {
            // Handle user not found
            return null;
        }
    }

    public void deleteUser(Long userId) {
        userRepository.deleteById(userId);
    }
}
